alias mvln='_mvln(){ 
if [[ -L "$1" ]] && [[ -e "$2" ]]; then
  if [[ -w "$1" ]] || [[ $AX_MVLN_WRITEOUT_NEEDSUDO == 1 ]]; then [[ ! -w "$1" ]] && SUDO=sudo || SUDO=command
    echo "about to point $1, which points to $(readlink $1), to $2. The original link will be overwritten. Is this okay with you? [ y = yes  n = no ]"
    if [[ "$(while true; do read -sn1; [[ $REPLY =~ [yn] ]] && break; done; echo $REPLY)" =~ [yY] ]]; then
       echo "creating the new link, $1 - points to -> $2...."
       if ! $SUDO ln -s "$2" "$1" --force -v; then echo "error-check your permissions!"; fi
       echo "process completed (result code=$?)"
    fi
  else
    echo "failure: cannot write to this item, need admin rights!"
    AX_MVLN_WRITEOUT_NEEDSUDO=1
    _mvln "$@"
  fi
else
  echo "usage: mvln [existing symbolic link] [new target]*"
  echo ""
  echo " ex sy link - a symbolic link with a target already in place, missing or not"
  echo " new target - an exisitng file, directory, device, etc to be the new target"
  echo ""
  echo "* the new target must exist, can be any valid filesysten object (all links created are SOFT links)"
  echo "  furthermore, all links being replaced are permenantly discarded, no backups made."
  echo "* mvln will NEVER delete a filesystem object other than a symbolic link, ever!"
  echo "* send bugs to (read the README that came with autox in $AX_BASE/doc/README!!"
  (exit 2)
fi
R=$?
unset -f _mvln
return $?
}
_mvln'
