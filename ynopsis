infocmp(1)                  General Commands Manual                 infocmp(1)



NNAAMMEE
       iinnffooccmmpp - compare or print out _t_e_r_m_i_n_f_o descriptions

SSYYNNOOPPSSIISS
       iinnffooccmmpp [--11CCDDEEFFGGIIKKLLTTUUVVccddeeggiillnnppqqrrttuuxx]
             [--vv _n] [--ss dd| ii| ll| cc] [--RR ssuubbsseett]
             [--ww _w_i_d_t_h] [--AA _d_i_r_e_c_t_o_r_y] [--BB _d_i_r_e_c_t_o_r_y]
             [_t_e_r_m_n_a_m_e...]

DDEESSCCRRIIPPTTIIOONN
       iinnffooccmmpp  can be used to compare a binary tteerrmmiinnffoo entry with other ter‐
       minfo entries, rewrite a tteerrmmiinnffoo description to take advantage of  the
       uussee==  terminfo  field,  or  print  out  a tteerrmmiinnffoo description from the
       binary file (tteerrmm) in a variety of formats.  In all cases, the  boolean
       fields  will be printed first, followed by the numeric fields, followed
       by the string fields.

   DDeeffaauulltt OOppttiioonnss
       If no options are specified and zero or one  _t_e_r_m_n_a_m_e_s  are  specified,
       the --II option will be assumed.  If more than one _t_e_r_m_n_a_m_e is specified,
       the --dd option will be assumed.

   CCoommppaarriissoonn OOppttiioonnss [[--dd]] [[--cc]] [[--nn]]
       iinnffooccmmpp  compares  the  tteerrmmiinnffoo  description  of  the  first  terminal
       _t_e_r_m_n_a_m_e  with  each  of  the descriptions given by the entries for the
       other terminal's _t_e_r_m_n_a_m_e_s.  If a capability is defined for only one of
       the  terminals, the value returned will depend on the type of the capa‐
       bility: FF for boolean variables, --11 for integer variables, and NNUULLLL for
       string variables.

       The  --dd  option  produces  a  list of each capability that is different
       between two entries.  This option is  useful  to  show  the  difference
       between two entries, created by different people, for the same or simi‐
       lar terminals.

       The --cc option produces a list of each capability that is common between
       two  or more entries.  Capabilities that are not set are ignored.  This
       option can be used as a quick check to see if the --uu  option  is  worth
       using.

       The --nn option produces a list of each capability that is in none of the
       given entries.  If no _t_e_r_m_n_a_m_e_s are  given,  the  environment  variable
       TTEERRMM  will  be  used  for both of the _t_e_r_m_n_a_m_e_s.  This can be used as a
       quick check to see if anything was left out of a description.

   SSoouurrccee LLiissttiinngg OOppttiioonnss [[--II]] [[--LL]] [[--CC]] [[--rr]]
       The --II, --LL, and --CC options will produce a source listing for each  ter‐
       minal named.

            --II   use the tteerrmmiinnffoo names
            --LL   use the long C variable name listed in <tteerrmm..hh>
            --CC   use the tteerrmmccaapp names
            --rr   when using --CC, put out all capabilities in tteerrmmccaapp form
            --KK   modifies the --CC option, improving BSD-compatibility.

       If  no  _t_e_r_m_n_a_m_e_s are given, the environment variable TTEERRMM will be used
       for the terminal name.

       The source produced by the --CC option may be used directly as a  tteerrmmccaapp
       entry,  but not all parameterized strings can be changed to the tteerrmmccaapp
       format.  iinnffooccmmpp will attempt to  convert  most  of  the  parameterized
       information,  and  anything not converted will be plainly marked in the
       output and commented out.  These should be edited by hand.

       For best results when converting to tteerrmmccaapp format, you should use both
       --CC  and  --rr.   Normally a termcap description is limited to 1023 bytes.
       infocmp trims away less essential parts to make it  fit.   If  you  are
       converting to one of the (rare) termcap implementations which accept an
       unlimited size of termcap, you may want to add  the  --TT  option.   More
       often  however,  you  must  help  the  termcap implementation, and trim
       excess whitespace (use the --00 option for that).

       All padding information for strings  will  be  collected  together  and
       placed at the beginning of the string where tteerrmmccaapp expects it.  Manda‐
       tory padding (padding information with  a  trailing  '/')  will  become
       optional.

       All  tteerrmmccaapp  variables  no longer supported by tteerrmmiinnffoo, but which are
       derivable from other tteerrmmiinnffoo variables, will be output.  Not all  tteerr‐‐
       mmiinnffoo  capabilities will be translated; only those variables which were
       part of tteerrmmccaapp will normally be output.  Specifying the --rr option will
       take  off  this  restriction, allowing all capabilities to be output in
       _t_e_r_m_c_a_p form.  Normally you would use both the --CC and --rr options.   The
       actual  format  used incorporates some improvements for escaped charac‐
       ters from terminfo format.  For a stricter BSD-compatible  translation,
       use the --KK option rather than --CC.

       Note that because padding is collected to the beginning of the capabil‐
       ity, not all capabilities are output.  Mandatory padding  is  not  sup‐
       ported.   Because tteerrmmccaapp strings are not as flexible, it is not always
       possible to convert a tteerrmmiinnffoo string  capability  into  an  equivalent
       tteerrmmccaapp  format.  A subsequent conversion of the tteerrmmccaapp file back into
       tteerrmmiinnffoo format will not necessarily reproduce  the  original  tteerrmmiinnffoo
       source.

       Some  common  tteerrmmiinnffoo  parameter sequences, their tteerrmmccaapp equivalents,
       and some terminal types which commonly have such sequences, are:

           tteerrmmiinnffoo                    tteerrmmccaapp   Representative Terminals
           ───────────────────────────────────────────────────────────────
           %%pp11%%cc                       %%..        adm
           %%pp11%%dd                       %%dd        hp, ANSI standard, vt100
           %%pp11%%''xx''%%++%%cc                 %%++xx       concept
           %%ii                          %%iiq       ANSI standard, vt100
           %%pp11%%??%%''xx''%%>>%%tt%%pp11%%''yy''%%++%%;;    %%>>xxyy      concept
           %%pp22 is printed before %%pp11   %%rr        hp

   UUssee== OOppttiioonn [[--uu]]
       The --uu option produces a tteerrmmiinnffoo source description of the first  ter‐
       minal  _t_e_r_m_n_a_m_e  which is relative to the sum of the descriptions given
       by the entries for the other terminals _t_e_r_m_n_a_m_e_s.  It does this by ana‐
       lyzing  the  differences  between  the  first  _t_e_r_m_n_a_m_e  and  the other
       _t_e_r_m_n_a_m_e_s and producing a description with uussee== fields  for  the  other
       terminals.  In this manner, it is possible to retrofit generic terminfo
       entries into a terminal's description.  Or, if  two  similar  terminals
       exist, but were coded at different times or by different people so that
       each description is a full description, using iinnffooccmmpp  will  show  what
       can be done to change one description to be relative to the other.

       A  capability  will  get  printed  with  an at-sign (@) if it no longer
       exists in the first _t_e_r_m_n_a_m_e, but one of  the  other  _t_e_r_m_n_a_m_e  entries
       contains  a  value  for  it.   A capability's value gets printed if the
       value in the first _t_e_r_m_n_a_m_e is not found in any of the  other  _t_e_r_m_n_a_m_e
       entries,  or  if  the first of the other _t_e_r_m_n_a_m_e entries that has this
       capability gives a different value for the capability than that in  the
       first _t_e_r_m_n_a_m_e.

       The order of the other _t_e_r_m_n_a_m_e entries is significant.  Since the ter‐
       minfo compiler ttiicc does a left-to-right scan of the capabilities, spec‐
       ifying  two  uussee==  entries  that contain differing entries for the same
       capabilities will produce different results depending on the order that
       the  entries  are given in.  iinnffooccmmpp will flag any such inconsistencies
       between the other _t_e_r_m_n_a_m_e entries as they are found.

       Alternatively, specifying a capability _a_f_t_e_r a uussee== entry that contains
       that  capability  will  cause  the  second specification to be ignored.
       Using iinnffooccmmpp to recreate a description can be a useful check  to  make
       sure  that  everything  was  specified correctly in the original source
       description.

       Another error that does not cause incorrect compiled  files,  but  will
       slow  down  the  compilation time, is specifying extra uussee== fields that
       are superfluous.  iinnffooccmmpp will flag any other _t_e_r_m_n_a_m_e _u_s_e_= fields that
       were not needed.

   CChhaannggiinngg DDaattaabbaasseess [[--AA _d_i_r_e_c_t_o_r_y] [-B _d_i_r_e_c_t_o_r_y]
       Like  other  nnccuurrsseess utilities, infocmp looks for the terminal descrip‐
       tions in several places.  You can use the  TTEERRMMIINNFFOO  and  TTEERRMMIINNFFOO__DDIIRRSS
       environment  variables  to  override  the  compiled-in  default list of
       places to search (see ccuurrsseess(3X) for details).

       You can also use the options --AA and --BB to override the list  of  places
       to search when comparing terminal descriptions:

       ·   The --AA option sets the location for the first _t_e_r_m_n_a_m_e

       ·   The --BB option sets the location for the other _t_e_r_m_n_a_m_e_s.

       Using  these options, it is possible to compare descriptions for a ter‐
       minal with the same name  located  in  two  different  databases.   For
       instance,  you  can use this feature for comparing descriptions for the
       same terminal created by different people.

   OOtthheerr OOppttiioonnss
       --00   causes the fields to be printed on one line, without wrapping.

       --11   causes the fields to be printed out one to a line.  Otherwise, the
            fields  will be printed several to a line to a maximum width of 60
            characters.

       --aa   tells iinnffooccmmpp to retain  commented-out  capabilities  rather  than
            discarding  them.   Capabilities  are  commented by prefixing them
            with a period.

       --DD   tells iinnffooccmmpp to print the database locations that it knows about,
            and exit.

       --EE   Dump  the  capabilities of the given terminal as tables, needed in
            the C initializer for a TERMTYPE structure (the terminal  capabil‐
            ity structure in the <<tteerrmm..hh>>).  This option is useful for prepar‐
            ing versions of the curses library hardwired for a given  terminal
            type.  The tables are all declared static, and are named according
            to the type and the name of the corresponding terminal entry.

            Before ncurses 5.0, the split between the --ee and  --EE  options  was
            not  needed;  but  support  for extended names required making the
            arrays of terminal capabilities separate from the TERMTYPE  struc‐
            ture.

       --ee   Dump the capabilities of the given terminal as a C initializer for
            a TERMTYPE structure (the terminal  capability  structure  in  the
            <<tteerrmm..hh>>).   This  option  is useful for preparing versions of the
            curses library hardwired for a given terminal type.

       --FF   compare terminfo files.  This assumes that two following arguments
            are  filenames.   The  files  are  searched  for  pairwise matches
            between entries, with two entries considered to match  if  any  of
            their  names  do.   The  report  printed  to standard output lists
            entries with no matches in the other file, and entries  with  more
            than  one match.  For entries with exactly one match it includes a
            difference report.  Normally, to reduce the volume of the  report,
            use  references  are  not resolved before looking for differences,
            but resolution can be forced by also specifying --rr.

       --ff   Display complex terminfo strings which contain  if/then/else/endif
            expressions indented for readability.

       --GG   Display  constant literals in decimal form rather than their char‐
            acter equivalents.

       --gg   Display constant character literals in  quoted  form  rather  than
            their decimal equivalents.

       --ii   Analyze  the  initialization (iiss11, iiss22, iiss33), and reset (rrss11, rrss22,
            rrss33), strings in the entry.  For each string, the  code  tries  to
            analyze  it into actions in terms of the other capabilities in the
            entry, certain X3.64/ISO 6429/ECMA-48  capabilities,  and  certain
            DEC  VT-series  private  modes  (the  set  of  recognized  special
            sequences has been selected for  completeness  over  the  existing
            terminfo  database).   Each report line consists of the capability
            name, followed by a colon  and  space,  followed  by  a  printable
            expansion  of  the capability string with sections matching recog‐
            nized actions translated into {}-bracketed descriptions.  Here  is
            a list of the DEC/ANSI special sequences recognized: i.

                         Action        Meaning
                         ─────────────────────────────────────────
                         RIS           full reset
                         SC            save cursor
                         RC            restore cursor
                         LL            home-down
                         RSR           reset scroll region
                         ─────────────────────────────────────────
                         DECSTR        soft reset (VT320)
                         S7C1T         7-bit controls (VT220)
                         ─────────────────────────────────────────
                         ISO DEC G0    enable DEC graphics for G0
                         ISO UK G0     enable UK chars for G0
                         ISO US G0     enable US chars for G0
                         ISO DEC G1    enable DEC graphics for G1
                         ISO UK G1     enable UK chars for G1
                         ISO US G1     enable US chars for G1
                         ─────────────────────────────────────────
                         DECPAM        application keypad mode
                         DECPNM        normal keypad mode
                         DECANSI       enter ANSI mode
                         ─────────────────────────────────────────
                         ECMA[+-]AM    keyboard action mode
                         ECMA[+-]IRM   insert replace mode
                         ECMA[+-]SRM   send receive mode
                         ECMA[+-]LNM   linefeed mode
                         ─────────────────────────────────────────
                         DEC[+-]CKM    application cursor keys
                         DEC[+-]ANM    set VT52 mode
                         DEC[+-]COLM   132-column mode
                         DEC[+-]SCLM   smooth scroll
                         DEC[+-]SCNM   reverse video mode
                         DEC[+-]OM     origin mode
                         DEC[+-]AWM    wraparound mode

                         DEC[+-]ARM    auto-repeat mode

            It   also  recognizes  a  SGR  action  corresponding  to  ANSI/ISO
            6429/ECMA Set Graphics Rendition, with the  values  NORMAL,  BOLD,
            UNDERLINE,  BLINK,  and  REVERSE.   All but NORMAL may be prefixed
            with `+' (turn on) or `-' (turn off).

            An SGR0 designates an  empty  highlight  sequence  (equivalent  to
            {SGR:NORMAL}).

       --ll   Set output format to terminfo.

       --pp   Ignore padding specifications when comparing strings.

       --qq   Make  the  comparison listing shorter by omitting subheadings, and
            using "-" for absent capabilities, "@" for  canceled  rather  than
            "NULL".

       --RR_s_u_b_s_e_t
            Restrict  output  to  a given subset.  This option is for use with
            archaic versions of terminfo like those on SVr1, Ultrix, or  HP/UX
            that  do not support the full set of SVR4/XSI Curses terminfo; and
            variants such as AIX that have their own  extensions  incompatible
            with  SVr4/XSI.   Available terminfo subsets are "SVr1", "Ultrix",
            "HP", and "AIX"; see tteerrmmiinnffoo(5) for details.  You can also choose
            the  subset  "BSD"  which  selects  only capabilities with termcap
            equivalents recognized by 4.4BSD.

       --ss _[_d_|_i_|_l_|_c_]
            The --ss option sorts the fields within each type according  to  the
            argument below:

            dd    leave  fields  in  the order that they are stored in the _t_e_r_‐
                 _m_i_n_f_o database.

            ii    sort by _t_e_r_m_i_n_f_o name.

            ll    sort by the long C variable name.

            cc    sort by the _t_e_r_m_c_a_p name.

            If the --ss option is not given, the  fields  printed  out  will  be
            sorted  alphabetically  by  the  tteerrmmiinnffoo  name  within each type,
            except in the case of the --CC or the --LL options,  which  cause  the
            sorting  to  be  done  by  the tteerrmmccaapp name or the long C variable
            name, respectively.

       --TT   eliminates size-restrictions  on  the  generated  text.   This  is
            mainly  useful  for  testing  and  analysis,  since  the  compiled
            descriptions are limited (e.g., 1023 for termcap,  4096  for  ter‐
            minfo).

       --tt   tells  ttiicc  to  discard commented-out capabilities.  Normally when
            translating from terminfo to termcap, untranslatable  capabilities
            are commented-out.

       --UU   tells  iinnffooccmmpp  to  not  post-process  the  data after parsing the
            source file.  This feature helps when comparing  the  actual  con‐
            tents  of  two source files, since it excludes the inferences that
            iinnffooccmmpp makes to fill in missing data.

       --VV   reports the version of ncurses which was used in this program, and
            exits.

       --vv _n prints  out  tracing  information on standard error as the program
            runs.  Higher values of n induce greater verbosity.

       --ww _w_i_d_t_h
            changes the output to _w_i_d_t_h characters.

       --xx   print information for user-defined capabilities.  These are exten‐
            sions  to the terminfo repertoire which can be loaded using the --xx
            option of ttiicc.

FFIILLEESS
       /etc/terminfo       Compiled terminal description database.

EEXXTTEENNSSIIOONNSS
       The --00, --11, --EE, --FF, --GG, --RR, --TT, --VV, --aa, --ee, --ff, --gg, --ii, --ll, --pp, --qq  and
       --tt options are not supported in SVr4 curses.

       The  --rr  option's  notion of `termcap' capabilities is System V Release
       4's.  Actual BSD curses versions will have a more restricted  set.   To
       see only the 4.4BSD set, use --rr --RRBBSSDD.

BBUUGGSS
       The --FF option of iinnffooccmmpp(1) should be a ttooee(1) mode.

SSEEEE AALLSSOO
       ccaappttooiinnffoo(1),  iinnffoottooccaapp(1),  ttiicc(1),  ttooee(1),  nnccuurrsseess(3NCURSES), tteerr‐‐
       mmiinnffoo(5).

       http://invisible-island.net/ncurses/tctest.html

       This describes nnccuurrsseess version 5.9 (patch 20150516).

AAUUTTHHOORR
       Eric S. Raymond <esr@snark.thyrsus.com> and
       Thomas E. Dickey <dickey@invisible-island.net>



                                                                    infocmp(1)
