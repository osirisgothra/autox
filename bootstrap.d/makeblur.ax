#!/bin/bash 
#======================================================================================================================
#
#          FILE: BOOTSTRAPNAME.ax
# 
#         USAGE: BOOTSTRAPNAME [arguments]
# 
#   DESCRIPTION: 
# 
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: ---
#        AUTHOR: Gabriel Thomas Sharp (gts), osirisgothra@hotmail.com
#  ORGANIZATION: Paradisim Enterprises, LLC, PA, USA
#       CREATED: 05/03/2015 07:20
#      REVISION:  ---
#  HELP CONTENT:
#					usage: makeblur --help for more info
#
#  Make the background of a terminal or other semi-transparent window blurry.
#  This requires KDE's kwin compositor in order to work with this script.#
#
#  syntax: makeblur [-hpi? | --pick|--ignore-no-kde|--help] -- [xprop flags]
#
#  -u --unblur does reverse (experimental) of making the terminal blur by removing the attribute
#  -p --pick 
#  			do not autodetect current window, your mouse pointer will change shape, then you must click on
#			the window that you wish to apply the attributes to (or right-click to cancel). The button order
#			is reversed on left-handed mouse systems.
#  -i --ignore-no-kde
#			try to apply the attributes even if the window does not seem to carry the right kind of
#			window attributes (forcefully apply) This does not guarentee that the window will be blurred!
#	-h	-?	--help
#			The text you are reading now
#
#			This script has parts that were imported from the GXBASE project (http://gxbase.github.io)
#			This script in whole is part of the AUTOX project (http://autox.github.io)
#
#			This script (C) Copyright 2014-2015 Paradisim Enterprises, LLC, PA, USA, Licensed under GNU GPL v3
#			You may get a copy of this LICENSE at the website: http://gpl.gnu.org
#			For more info, contact the author Gabriel Thomas Sharp osirisgothra@hotmail.com
#======================================================================================================================

# do not run outside of X sessions
[[ $AX_ON_XSESSION != yes ]] && return 1
if ! xprop -root &> /dev/null; then
    if ax.config.has disable_xprop_on_invalidsessions no; then
        echo "note: xprop will not be disabled from this non X environment, because you have configured it to not be excluded"
        echo "      this could hinder startup times (only when recompiling; not precompiled script runtimes)"
    else
        true debug echo "xprop disabling -- not showing because this is the default behavior"
        function xprop()
        {
            # outputting this block to stderr to be compliant with xprop's behavior concearning errors
            {
            echo "xprop disabled because it did not pass during runtime checks"
            echo "to disable this behavior, set 'disable_xprop_on_invalidsessions=yes' in the autox config"
            echo "located in $AX_BASE/config/autoxrc"
            } > /dev/stderr
           return 1
        }
    fi
fi

function makeblur()
{

unset -f $0
unset PICK_WINDOW IGNORE_NOKDE
unset DO_UNBLUR
ARGS=`getopt -n ${0//_/} -l unblur,help,pick,ignore-no-kde -o uh?pi -- "$@"`
[[ $? -ne 0 ]] && { echo "Usage: makeblur [-hpi? | --help --pick --ignore-no-kde] -- [xprop flags]"; return $?; }
eval set -- "$ARGS"
while [[ $1 != '--' ]]; do
	case ${1//-/} in 
		help|h)
			cat <<-EOH
			
			Make the background of a terminal or other semi-transparent window blurry.
			This requires KDE's kwin compositor in order to work with this script.

			syntax: makeblur [-hpi? | --pick|--ignore-no-kde|--help] -- [xprop flags]

			-u  --unblur does reverse (experimental) of making the terminal blur by removing the attribute
			-p	--pick 
			 \tdo not autodetect current window, your mouse pointer will change shape, then you must click on
			\tthe window that you wish to apply the attributes to (or right-click to cancel). The button order
				is reversed on left-handed mouse systems.
			-i	--ignore-no-kde
			    try to apply the attributes even if the window does not seem to carry the right kind of
			    window attributes (forcefully apply) This does not guarentee that the window will be blurred!
			-h	-?	--help
				The text you are reading now

			This script is distributed as part of the GXBASE repository and distribution and is licensed under
			the LGPL versions 2 and above. Visit the GNU-GPL website for more information on this license.

			EOH
			return 0;;
		unblur|u)
				DO_UNBLUR=1
				;;
		pick|p)
			PICK_WINDOW=1;;
		ignore-no-kde|i)
			IGNORE_NOKDE=1;;
		*)
			echo "internal error: $1 not expected at this time";;
	esac
	shift
done
unset getspec
while [[ ! -z "$1" ]]; do
	# process non-proc options
	[[ $getspec ]] && [[ $getspec != -root ]] && echo "warning: xprops already set, being overwritten by later specs: $1";
	getspec=$1
	shift
done
if [ $DISPLAY ]; then
	if ( ! command xprop -root | grep KDE > /dev/null ) && [[ -z $IGNORE_NOKDE ]]; then
		echo "MAKEBLUR: window type not KDE, cannot run."; false
	else
		function func_getcurrentwindow()
		{
			
			eval xprop -root | grep ^"_NET_ACTIVE_WINDOW" | grep --only-matching "0x[0-9a-fA-F]*" --color=never			
		}
		if [[ $PICK_WINDOW != 1 ]]; then
			USEID="-id `func_getcurrentwindow`"
		else
			unset USEID
		fi
		echo "USEID=$USEID"
		set -x
		if [[ $DO_UNBLUR == 1 ]]; then			
			eval xprop -remove _KDE_NET_WM_BLUR_BEHIND_REGION $USEID
		else
			eval xprop -f _KDE_NET_WM_BLUR_BEHIND_REGION 32c -set _KDE_NET_WM_BLUR_BEHIND_REGION 1 $USEID
		fi
		set +x	

		RETVAL=$[ $? + 0 ]
		# just in case we were sourced, undefine the function
		unset func_getcurrentwindow
		if [ $RETVAL -eq 0 ]; then
			# in the case that we are not sourced and can't use "return" then we must
			# just set the return value to 1 this way to avoid errors (same with the false case above/below)
			true
		else
			echo -ne "MAKEBLUR: "
			if [ $RETVAL -eq 1 ]; then
				echo "Something went wrong when setting the window attributes, general failure."
			else
				echo "Attribute Setting Failed, Got Extended Error Code # $RETVAL (but returning 1)."
			fi
			false
		fi
	fi
fi

}



# entry point
function __makeblur_loader()
{
	echo -n "\e[1m*\e[0m Terminal Blur (type makeblur) for KDE Terminals - "
	if xprop -root | grep KDE -qn || [[ $(ax.config makeblur_no_kde_test) == yes ]]; then
		local AXLOG=$AX_BASE/logs/${FUNCNAME//_/}.log
		whoami
		if [[ $(ax.config makeblur_disable) == yes ]]; then
			echo "Loaded by not Applied (User Preference)"
		else
			if makeblur $( [[ "$(ax.config makeblur_no_kde_test)" == yes ]] && echo "-i" )  &> $AXLOG; then
						true exhint echo "Applied (To Current KDE Session)"
						true exhint echo "  hint: you can use bluron and bluroff as shortcuts to turn blur on/off"
						builtin alias bluron='AX_BLUR=ON; makeblur -i; dialog --colors --nook --nocancel --pause "Blur Has Been Enabled, Please Redraw The Display For Changes To Take Effect." $((LINES/4 > 8?LINES/4:8)) $((COLUMNS/2)) 0; clear;true'
						builtin alias bluroff='AX_BLUR=OFF; makeblur -iu; dialog --colors --nook --nocancel --pause "Blur Has Been Disabled" $((LINES/4 > 8?LINES/4:8)) $((COLUMNS/2)) 0; clear; true'
						builtin alias blurtgl='[[ $AX_BLUR == ON ]] && bluroff || bluron; clear; true'

			else
				echo "Failed (Read $AXLOG for command output)"
			fi
			
		fi
	else
		echo "(unavailable)"
	fi
	if ! ax.config.has makeblur_disable; then
		# first time run, set up default setting(s)
		ax.config.set makeblur_disable no
		ax.config.set makeblur_no_kde_test no
		echo "   ^--- config settings not present, applied first-run settings"								
	fi
}

__makeblur_loader "$@"
